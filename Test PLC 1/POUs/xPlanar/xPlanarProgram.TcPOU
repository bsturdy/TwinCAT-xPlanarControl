<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="xPlanarProgram" Id="{5f53017b-87c3-461b-8337-82487cd68e06}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM xPlanarProgram
VAR
	
	xPlanar			: xPlanarControl;
	
	State			: BYTE;
	
	ProgramTrigger	: R_Trig;
	LEDTimer		: TON;

	FlashTime		: TIME := T#250MS;
	
	ProgramRunning	: BOOL;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[

// ======================================================================== //
//																			//
//			    	xPlanar Logic and LED / button control					//
//																			//
// ======================================================================== //



// ------------------------------------------------------------------------ //
// -------------------------- LED logic ----------------------------------- //

ProgramTrigger(CLK := IO.HardwareInput[1]);
LEDTimer(IN := (NOT(LEDTimer.Q)), PT := FlashTime);

IF LEDTimer.Q THEN
	IO.HardwareOutput[1] := NOT(IO.HardwareOutput[1]);
	IO.HardwareOutput[2] := NOT(IO.HardwareOutput[2]);
	IO.HardwareOutput[3] := NOT(IO.HardwareOutput[3]);
	IO.HardwareOutput[4] := NOT(IO.HardwareOutput[4]);
END_IF

IF ProgramTrigger.Q THEN
	ProgramRunning := NOT(ProgramRunning);
END_IF

IF (NOT(ProgramRunning) AND (State <> 0)) THEN
	FlashTime := T#100MS;
ELSE
	FlashTime := T#1000MS;
END_IF



// ------------------------------------------------------------------------ //
// --------------------- xPlanar control program -------------------------- //

xPlanar.CyclicUpdate();

IF xPlanar.DetectErrors() THEN
	State := 99;
END_IF

CASE State OF
	
	0:
		IF ProgramRunning THEN
			State := 1;
		ELSE
			State := 0;
		END_IF
		
	1:	
		IF xPlanar.EnableMovers() THEN
			State := 2;
		END_IF
		
	66: // Testing
		IF xPlanar.CaEnable() THEN
			State := 2;
		END_IF
		
	2:
		IF ProgramRunning THEN
			State := 3;
		ELSE
			State := 0;
		END_IF
		
	3:
		IF xPlanar.Home() THEN
			State := 4;
		END_IF
		
	4:
		IF ProgramRunning THEN
			State := 5;
		ELSE
			State := 0;
		END_IF
		
	5:
		IF xPlanar.SwapPlaces() THEN
			State := 6;
		END_IF	
		
	6:
		IF ProgramRunning THEN
			State := 7;
		ELSE
			State := 0;
		END_IF
		
	7:
		IF xPlanar.FollowTileEdge() THEN
			State := 8;
		END_IF
		
	8:
		IF ProgramRunning THEN
			State := 9;
		ELSE
			State := 0;
		END_IF
		
	9:
		IF xPlanar.VaryMoverHeight() THEN
			State := 10;
		END_IF
		
	10:
		IF ProgramRunning THEN
			State := 11;
		ELSE
			State := 0;
		END_IF
		
	11:
		IF xPlanar.Spin() THEN
			State := 12;
		END_IF
		
	12:
		IF ProgramRunning THEN
			State := 13;
		ELSE
			State := 0;
		END_IF
		
	13:
		IF xPlanar.Tilt() THEN
			State := 2;
		END_IF
			
	99:
		IF xPlanar.ResetErrors() THEN
			State := 0;
		END_IF	
	
END_CASE]]></ST>
    </Implementation>
    <LineIds Name="xPlanarProgram">
      <LineId Id="606" Count="0" />
      <LineId Id="594" Count="0" />
      <LineId Id="516" Count="0" />
      <LineId Id="595" Count="3" />
      <LineId Id="601" Count="1" />
      <LineId Id="599" Count="1" />
      <LineId Id="392" Count="6" />
      <LineId Id="575" Count="2" />
      <LineId Id="399" Count="6" />
      <LineId Id="407" Count="1" />
      <LineId Id="410" Count="1" />
      <LineId Id="603" Count="1" />
      <LineId Id="412" Count="1" />
      <LineId Id="415" Count="20" />
      <LineId Id="518" Count="4" />
      <LineId Id="436" Count="77" />
      <LineId Id="10" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>